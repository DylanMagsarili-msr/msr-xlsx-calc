{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/RawValue.js","webpack:///./src/int_2_col_str.js","webpack:///./src/col_str_2_int.js","webpack:///./src/errors.js","webpack:///./src/Range.js","webpack:///./src/getSanitizedSheetName.js","webpack:///./src/str_2_val.js","webpack:///./src/RefValue.js","webpack:///./src/find_all_cells_with_formulas.js","webpack:///./src/index.js","webpack:///./src/exec_formula.js","webpack:///./src/expression_builder.js","webpack:///./src/Exp.js","webpack:///./src/LazyValue.js","webpack:///./src/UserFnExecutor.js","webpack:///./src/UserRawFnExecutor.js","webpack:///./src/formulas.js","webpack:///./src/utils.js","webpack:///./src/formulas-raw.js","webpack:///./src/Calculator.js"],"names":["root","factory","exports","module","define","amd","a","i","this","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","setValue","v","calc","modulo","dividend","columnName","guard","String","fromCharCode","col_str","colstr","replace","length","Math","pow","charCodeAt","nil","Error","div0","ref","num","na","error","data","ERROR_MESSAGE_TO_VALUE","getErrorValueByMessage","errorMessage","col_str_2_int","int_2_col_str","getSanitizedSheetName","str_expression","formula","range_expression","sheet_name","sheet","indexOf","aux","split","wb","Sheets","max_row","arr","min_row","parseInt","str_max_row","min_col","max_col","matrix","row","push","j","cell_name","cell_full_name","formula_ref","status","exec_formula","cell","f","includes","quotedMatch","match","RawValue","RefValue","LazyValue","Range","definedNames","getDefinedName","buffer","Workbook","Names","keys","values","forEach","Name","Ref","str_2_val","isNaN","trim","inner","substr","self","parseRef","resolved_ref","ref_cell","console","log","w","cells","find_all_cells_with_formulas","Calculator","mymodule","workbook","options","formulas","continue_after_error","log_error","calculator","set_fx","exec_fx","import_functions","import_raw_functions","xlsx_Fx","localizeFunctions","XLSX_CALC","expression_builder","xlsx_raw_Fx","functions","opts","formulajs","prefix","obj","override","my_assign","dest","source","JSON","parse","stringify","k","build_expression","update_cell_value","fn","args","apply","dic","newName","oldName","Exp","UserFnExecutor","UserRawFnExecutor","common_operations","root_exp","str_formula","exp_obj","was_string","fn_stack","exp","string","char","state","start","single_quote","stack","trim_buffer","special","special_raw","ini_parentheses","pop","add_operation","exp_id","last_arg","applyCellError","cellValueOrError","errorValue","message","undefined","applyCellValue","newCellType","getCellType","cellValue","isEmpty","checkVariable","getCurrentCellIndex","exec","op","splice","b","Array","isArray","e","id","array","colAndRow","colNumber","rowNumber","newCellNumber","newCellValue","destinationCellName","concat","execNegativePow","Date","exec_minus","getTime","toLowerCase","user_function","result","map","utils","FLOOR","floor","ABS","abs","SQRT","sqrt","VLOOKUP","return_index","range_lookup","val","MAX","max","arguments","arg","col","SUM","sum","MIN","min","CONCATENATE","PMT","rate_per_period","number_of_payments","present_value","future_value","type","q","COUNTA","counta","IRR","range","guess","guest","NPV","normsInv","STDEV","getArrayOfNumbers","_mean","reduce","mean","dev","itm","AVERAGE","avg","EXP","E","LN","var_p","covariance_p","TRIM","LEN","ISBLANK","is_blank","HLOOKUP","needle","table","index","exactmatch","searchingFor","INDEX","row_num","column_num","MATCH","lookupValue","matchType","match_exactly_string","match_exactly_non_string","match_less_than_or_equal","match_greater_than_or_equal","SUMPRODUCT","parseNumber","parseFloat","consistentSizeRanges","matrixArray","getRowCount","getColCount","rowCount","colCount","product","_i","_ij","arrays","ISNUMBER","x","TODAY","today","setHours","ISERROR","TIME","hours","minutes","seconds","DAY","date","getDate","day","MONTH","getMonth","month","YEAR","getFullYear","year","RIGHT","text","number","substring","LEFT","IFS","cond","ROUND","decimalPlaces","round","roundMeasure","CORREL","inv_n","avg_a","avg_b","sa","sb","SUMIF","elementToSum","sumResult","slice","elt","toString","CHOOSE","option","SUBSTITUTE","old_text","new_text","occurrence","RegExp","CEILING","significance","ceil","FILTER","someFormula","include","if_empty","arrayWidth","arrayHeight","includeWidth","includeHeight","getMatrixValueForFilter","bool","parseBool","addEmptyValuesToArray","indexValue","idx","average","mu","sigma","Infinity","requiredLength","requiredHeight","up","toUpperCase","cell_ref","rows","columns","height","width","ref_value","parsed_ref","end_range_col","onerrorvalue","condition","_then","_else","expressionWithRange","colRow","matrixRow","destinationColumn","destinationRow","expressions","variables","calcNames","var_name","variable","setVarOfExpression","vars","item","getRef","ref_name"],"mappings":"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","file":"xlsx-calc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","\"use strict\";\n\nmodule.exports = function RawValue(value) {\n    this.setValue = function(v) {\n        value = v;\n    };\n    this.calc = function() {\n        return value;\n    };\n};\n","\"use strict\";\n\nmodule.exports = function int_2_col_str(n) {\n    var dividend = n + 1;\n    var columnName = '';\n    var modulo;\n    var guard = 10;\n    while (dividend > 0 && guard--) {\n        modulo = (dividend - 1) % 26;\n        columnName = String.fromCharCode(modulo + 65) + columnName;\n        dividend = (dividend - modulo - 1) / 26;\n    }\n    return columnName;\n};","\"use strict\";\n\nmodule.exports = function col_str_2_int(col_str) {\n    var r = 0;\n    var colstr = col_str.replace(/[0-9]+$/, '');\n    for (var i = colstr.length; i--;) {\n        r += Math.pow(26, colstr.length - i - 1) * (colstr.charCodeAt(i) - 64);\n    }\n    return r - 1;\n};","const nil = new Error('#NULL!')\nconst div0 = new Error('#DIV/0!')\nconst value = new Error('#VALUE!')\nconst ref = new Error('#REF!')\nconst name = new Error('#NAME?')\nconst num = new Error('#NUM!')\nconst na = new Error('#N/A')\nconst error = new Error('#ERROR!')\nconst data = new Error('#GETTING_DATA')\nconst calc = new Error('#CALC!')\n\nconst ERROR_MESSAGE_TO_VALUE = {\n    '#NULL!': 0x00,\n    '#DIV/0!': 0x07,\n    '#VALUE!': 0x0F,\n    '#REF!': 0x17,\n    '#NAME?': 0x1D,\n    '#NUM!': 0x24,\n    '#N/A': 0x2A,\n    '#GETTING_DATA': 0x2B,\n    '#CALC!': 0x00, // todo: set the correct error code\n};\n\nfunction getErrorValueByMessage(errorMessage) {\n    return ERROR_MESSAGE_TO_VALUE[errorMessage]\n}\n\nmodule.exports = {\n    nil,\n    div0,\n    value,\n    ref,\n    name,\n    num,\n    na,\n    error,\n    data,\n    calc,\n    getErrorValueByMessage,\n}","\"use strict\";\n\nconst col_str_2_int = require('./col_str_2_int.js');\nconst int_2_col_str = require('./int_2_col_str.js');\nconst getSanitizedSheetName = require('./getSanitizedSheetName.js');\n\nmodule.exports = function Range(str_expression, formula) {\n    this.calc = function() {\n        var range_expression, sheet_name, sheet;\n        if (str_expression.indexOf('!') != -1) {\n            var aux = str_expression.split('!');\n            sheet_name = getSanitizedSheetName(aux[0]);\n            range_expression = aux[1];\n        }\n        else {\n            sheet_name = formula.sheet_name;\n            range_expression = str_expression;\n        }\n        sheet = formula.wb.Sheets[sheet_name];\n        var arr = range_expression.split(':');\n        var min_row = parseInt(arr[0].replace(/^[A-Z]+/, ''), 10) || 0;\n        var str_max_row = arr[1].replace(/^[A-Z]+/, '');\n        var max_row;\n        if (str_max_row === '' && sheet['!ref']) {\n            str_max_row = sheet['!ref'].split(':')[1].replace(/^[A-Z]+/, '');\n        }\n        // the max is 1048576, but TLE\n        max_row = parseInt(str_max_row == '' ? '500000' : str_max_row, 10);\n        var min_col = col_str_2_int(arr[0]);\n        var max_col = col_str_2_int(arr[1]);\n        var matrix = [];\n        for (var i = min_row; i <= max_row; i++) {\n            var row = [];\n            matrix.push(row);\n            for (var j = min_col; j <= max_col; j++) {\n                var cell_name = int_2_col_str(j) + i;\n                var cell_full_name = sheet_name + '!' + cell_name;\n                var formula_ref = formula.formula_ref[cell_full_name];\n                if (formula_ref) {\n                    if (formula_ref.status === 'new') {\n                        formula.exec_formula(formula_ref);\n                    } else if (formula_ref.status === 'working') {\n                        if (formula_ref.cell.f.includes(formula.name)) {\n                            throw new Error('Circular ref');\n                        }\n                        formula.exec_formula(formula_ref);\n                    }\n                    if (sheet[cell_name].t === 'e') {\n                        row.push(sheet[cell_name]);\n                    }\n                    else {\n                        row.push(sheet[cell_name].v);\n                    }\n                }\n                else if (sheet[cell_name]) {\n                    if (sheet[cell_name].t === 'e') {\n                        row.push(sheet[cell_name]);\n                    }\n                    else {\n                        row.push(sheet[cell_name].v);\n                    }\n                }\n                else {\n                    row.push(null);\n                }\n            }\n        }\n        return matrix;\n    };\n};\n","\"use strict\";\n\nmodule.exports = function getSanitizedSheetName(sheet_name) {\n    var quotedMatch = sheet_name.match(/^'(.*)'$/);\n    if (quotedMatch) {\n        return quotedMatch[1];\n    }\n    else {\n        return sheet_name;\n    }\n};\n","const RawValue = require('./RawValue.js');\nconst RefValue = require('./RefValue.js');\nconst LazyValue = require('./LazyValue.js');\nconst Range = require('./Range.js');\n\n// this is used to _cache_ range names so that it doesn't need to be queried\n// every time a range is used\nlet definedNames, wb;\nfunction getDefinedName(buffer, formula) {\n    if (!(formula.wb.Workbook && formula.wb.Workbook.Names)) {\n        return null;\n    }\n    if (wb !== formula.wb) {\n        wb = formula.wb;\n        definedNames = null;\n        return getDefinedName(buffer, formula);\n    }\n    if (definedNames) {\n        return definedNames[buffer];\n    }\n    const keys = Object.values(formula.wb.Workbook.Names);\n    if (keys.length === 0) {\n        return;\n    }\n    definedNames = {};\n    keys.forEach(({ Name, Ref }) => {\n        if (!Name.includes('.')) {\n            definedNames[Name] = Ref;\n        }\n    });\n\n    return getDefinedName(buffer, formula);\n}\n\nmodule.exports = function str_2_val(buffer, formula) {\n    if (!isNaN(buffer)) {\n        return new RawValue(+buffer);\n    }\n    if (buffer === 'TRUE') {\n        return new RawValue(1);\n    }\n    if (typeof buffer !== 'string') {\n        return buffer;\n    }\n\n    buffer = buffer.trim().replace(/\\$/g, '')\n\n    if (buffer.match(/^[A-Z]+[0-9]+:[A-Z]+[0-9]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[^!]+![A-Z]+[0-9]+:[A-Z]+[0-9]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[A-Z]+:[A-Z]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[^!]+![A-Z]+:[A-Z]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[A-Z]+[0-9]+$/)) {\n        return new RefValue(buffer, formula);\n    }\n    if (buffer.match(/^[^!]+![A-Z]+[0-9]+$/)) {\n        return new RefValue(buffer, formula);\n    }\n    if (buffer.match(/%$/)) {\n        var inner = str_2_val(buffer.substr(0, buffer.length-1), formula)\n        return new LazyValue(() => inner.calc() / 100)\n    }\n    if (getDefinedName(buffer, formula)) {\n        return str_2_val(getDefinedName(buffer, formula), formula);\n    }\n    return buffer;\n};\n","\"use strict\";\n\nconst getSanitizedSheetName = require(\"./getSanitizedSheetName.js\");\n\nmodule.exports = function RefValue(str_expression, formula) {\n  var self = this;\n  this.name = \"RefValue\";\n  this.str_expression = str_expression;\n  this.formula = formula;\n\n  self.parseRef = function () {\n    var sheet, sheet_name, cell_name, cell_full_name;\n    if (str_expression.indexOf(\"!\") != -1) {\n      var aux = str_expression.split(\"!\");\n      sheet_name = getSanitizedSheetName(aux[0]);\n      sheet = formula.wb.Sheets[sheet_name];\n      cell_name = aux[1];\n    } else {\n      sheet = formula.sheet;\n      sheet_name = formula.sheet_name;\n      cell_name = str_expression;\n    }\n    if (!sheet) {\n      throw Error(\"Sheet \" + sheet_name + \" not found.\");\n    }\n    cell_full_name = sheet_name + \"!\" + cell_name;\n    return {\n      sheet: sheet,\n      sheet_name: sheet_name,\n      cell_name: cell_name,\n      cell_full_name: cell_full_name,\n    };\n  };\n\n  this.calc = function () {\n    var resolved_ref = self.parseRef();\n    var sheet = resolved_ref.sheet;\n    var cell_name = resolved_ref.cell_name;\n    var cell_full_name = resolved_ref.cell_full_name;\n    var ref_cell = sheet[cell_name];\n    if (!ref_cell) {\n      return null;\n    }\n    var formula_ref = formula.formula_ref[cell_full_name];\n    if (formula_ref) {\n      if (formula_ref.status === \"new\") {\n        formula.exec_formula(formula_ref);\n        if (ref_cell.t === \"e\") {\n          //  console.log('ref is an error with new formula', cell_full_name, ref_cell.w);\n          throw new Error(ref_cell.w);\n        }\n        return ref_cell.v;\n      } else if (formula_ref.status === \"working\") {\n        if (ref_cell.f.includes(formula.name)) {\n          throw new Error(\"Circular ref\");\n        }\n        formula.exec_formula(formula_ref);\n        return this.calc();\n      } else if (formula_ref.status === \"done\") {\n        if (ref_cell.t === \"e\") {\n          //    console.log('ref is an error after formula eval', cell_full_name, ref_cell.w);\n          throw new Error(ref_cell.w);\n        }\n        return ref_cell.v;\n      }\n    } else {\n      if (ref_cell.t === \"e\") {\n        console.log(\"ref is an error with no formula\", cell_name);\n        throw new Error(ref_cell.w);\n      }\n      return ref_cell.v;\n    }\n  };\n};\n","\"use strict\";\n\nmodule.exports = function find_all_cells_with_formulas(wb, exec_formula) {\n    let formula_ref = {};\n    let cells = [];\n    for (let sheet_name in wb.Sheets) {\n        let sheet = wb.Sheets[sheet_name];\n        for (let cell_name in sheet) {\n            if (sheet[cell_name] && sheet[cell_name].f) {\n                let formula = formula_ref[sheet_name + '!' + cell_name] = {\n                    formula_ref: formula_ref,\n                    wb: wb,\n                    sheet: sheet,\n                    sheet_name: sheet_name,\n                    cell: sheet[cell_name],\n                    name: cell_name,\n                    status: 'new',\n                    exec_formula: exec_formula\n                };\n                cells.push(formula);\n            }\n        }\n    }\n    return cells;\n};\n","\"use strict\";\n\nconst int_2_col_str = require('./int_2_col_str.js');\nconst col_str_2_int = require('./col_str_2_int.js');\nconst exec_formula = require('./exec_formula.js');\nconst find_all_cells_with_formulas = require('./find_all_cells_with_formulas.js');\nconst Calculator = require('./Calculator.js');\n\nvar mymodule = function(workbook, options) {\n    var formulas = find_all_cells_with_formulas(workbook, exec_formula);\n    for (var i = formulas.length - 1; i >= 0; i--) {\n      try {\n        exec_formula(formulas[i]);\n      } catch (error) {\n        if (!options || !options.continue_after_error) {\n          throw error\n        }\n        if (options.log_error) {\n          console.log('error executing formula', 'sheet', formulas[i].sheet_name, 'cell', formulas[i].name, error)\n        }\n      }\n    }\n};\n\nmymodule.calculator = function calculator(workbook) {\n    return new Calculator(workbook, exec_formula);\n};\n\nmymodule.set_fx = exec_formula.set_fx;\nmymodule.exec_fx = exec_formula.exec_fx;\nmymodule.col_str_2_int = col_str_2_int;\nmymodule.int_2_col_str = int_2_col_str;\nmymodule.import_functions = exec_formula.import_functions;\nmymodule.import_raw_functions = exec_formula.import_raw_functions;\nmymodule.xlsx_Fx = exec_formula.xlsx_Fx;\nmymodule.localizeFunctions = exec_formula.localizeFunctions;\n\nmymodule.XLSX_CALC = mymodule\n\nmodule.exports = mymodule;\n","\"use strict\";\n\nconst expression_builder = require('./expression_builder.js');\n\nlet xlsx_Fx = {};\nlet xlsx_raw_Fx = {};\n\nimport_functions(require('./formulas.js'));\nimport_raw_functions(require('./formulas-raw.js'));\n\nfunction import_raw_functions(functions, opts) {\n    for (var key in functions) {\n        xlsx_raw_Fx[key] = functions[key];\n    }\n}\n\nfunction import_functions(formulajs, opts) {\n    opts = opts || {};\n    var prefix = opts.prefix || '';\n    for (var key in formulajs) {\n        var obj = formulajs[key];\n        if (typeof(obj) === 'function') {\n            if (opts.override || !xlsx_Fx[prefix + key]) {\n                xlsx_Fx[prefix + key] = obj;\n            }\n            // else {\n            //     console.log(prefix + key, 'already exists.');\n            //     console.log('  to override:');\n            //     console.log('    XLSX_CALC.import_functions(yourlib, {override: true})');\n            // }\n        }\n        else if (typeof(obj) === 'object') {\n            import_functions(obj, my_assign(opts, { prefix: key + '.' }));\n        }\n    }\n}\n\nfunction my_assign(dest, source) {\n    var obj = JSON.parse(JSON.stringify(dest));\n    for (var k in source) {\n        obj[k] = source[k];\n    }\n    return obj;\n}\n\nfunction build_expression(formula) {\n    return expression_builder(formula, {xlsx_Fx: xlsx_Fx, xlsx_raw_Fx: xlsx_raw_Fx});\n}\n\nfunction exec_formula(formula) {\n    let root_exp = build_expression(formula);\n    root_exp.update_cell_value();\n}\n\nexec_formula.set_fx = function set_fx(name, fn) {\n    xlsx_Fx[name] = fn;\n};\n\nexec_formula.exec_fx = function exec_fx(name, args) {\n    return xlsx_Fx[name].apply(this, args);\n};\n\nexec_formula.localizeFunctions = function(dic) {\n    for (let newName in dic) {\n        let oldName = dic[newName];\n        if (xlsx_Fx[oldName]) {\n            xlsx_Fx[newName] = xlsx_Fx[oldName];\n        }\n        if (xlsx_raw_Fx[oldName]) {\n            xlsx_raw_Fx[newName] = xlsx_raw_Fx[oldName];\n        }\n    }\n};\n\nexec_formula.import_functions = import_functions;\nexec_formula.import_raw_functions = import_raw_functions;\nexec_formula.build_expression = build_expression;\nexec_formula.xlsx_Fx = xlsx_Fx;\nmodule.exports = exec_formula;\n","const Exp = require(\"./Exp.js\");\nconst RawValue = require(\"./RawValue.js\");\nconst UserFnExecutor = require(\"./UserFnExecutor.js\");\nconst UserRawFnExecutor = require(\"./UserRawFnExecutor.js\");\nconst common_operations = {\n  \"*\": \"multiply\",\n  \"+\": \"plus\",\n  \"-\": \"minus\",\n  \"/\": \"divide\",\n  \"^\": \"power\",\n  \"&\": \"concat\",\n  \"<\": \"lt\",\n  \">\": \"gt\",\n  \"=\": \"eq\",\n};\n\nmodule.exports = function expression_builder(formula, opts) {\n  formula.status = \"working\";\n\n  var xlsx_Fx = opts.xlsx_Fx || {};\n  var xlsx_raw_Fx = opts.xlsx_raw_Fx || {};\n\n  var root_exp;\n  var str_formula = formula.cell.f.replace(/\\n/g, \"\");\n  if (str_formula[0] == \"=\") {\n    str_formula = str_formula.substr(1);\n  }\n  var exp_obj = (root_exp = new Exp(formula));\n  var buffer = \"\",\n    was_string = false;\n  var fn_stack = [\n    {\n      exp: exp_obj,\n    },\n  ];\n\n  /**\n   * state pattern in functional way\n   */\n  function string(char) {\n    if (char === '\"') {\n      exp_obj.push(new RawValue(buffer));\n      was_string = true;\n      buffer = \"\";\n      state = start;\n    } else {\n      buffer += char;\n    }\n  }\n\n  function single_quote(char) {\n    if (char === \"'\") {\n      state = start;\n    }\n    buffer += char;\n  }\n\n  function ini_parentheses() {\n    var o,\n      trim_buffer = buffer.trim(),\n      special = xlsx_Fx[trim_buffer];\n    var special_raw = xlsx_raw_Fx[trim_buffer];\n    if (special_raw) {\n      special = new UserRawFnExecutor(special_raw, formula);\n    } else if (special) {\n      special = new UserFnExecutor(special, formula);\n    } else if (trim_buffer) {\n      //Error: \"Worksheet 1\"!D145: Function INDEX not found\n      throw new Error(\n        '\"' +\n          formula.sheet_name +\n          '\"!' +\n          formula.name +\n          \": Function \" +\n          buffer +\n          \" not found\"\n      );\n    }\n    o = new Exp(formula);\n    fn_stack.push({\n      exp: o,\n      special: special,\n    });\n    exp_obj = o;\n    buffer = \"\";\n  }\n\n  function end_parentheses() {\n    var v,\n      stack = fn_stack.pop();\n    exp_obj = stack.exp;\n    exp_obj.push(buffer);\n    v = exp_obj;\n    buffer = \"\";\n    exp_obj = fn_stack[fn_stack.length - 1].exp;\n    if (stack.special) {\n      stack.special.push(v);\n      exp_obj.push(stack.special);\n    } else {\n      exp_obj.push(v);\n    }\n  }\n\n  function add_operation(char) {\n    if (!was_string) {\n      exp_obj.push(buffer);\n    }\n    was_string = false;\n    exp_obj.push(char);\n    buffer = \"\";\n  }\n\n  function start(char) {\n    if (char === '\"') {\n      state = string;\n      buffer = \"\";\n    } else if (char === \"'\") {\n      state = single_quote;\n      buffer = \"'\";\n    } else if (char === \"(\") {\n      ini_parentheses();\n    } else if (char === \")\") {\n      end_parentheses();\n    } else if (common_operations[char]) {\n      add_operation(char);\n    } else if (char === \",\" && fn_stack[fn_stack.length - 1].special) {\n      was_string = false;\n      fn_stack[fn_stack.length - 1].exp.push(buffer);\n      fn_stack[fn_stack.length - 1].special.push(\n        fn_stack[fn_stack.length - 1].exp\n      );\n      fn_stack[fn_stack.length - 1].exp = exp_obj = new Exp(formula);\n      buffer = \"\";\n    } else if (char !== \" \") {\n      buffer += char;\n    }\n  }\n\n  var state = start;\n\n  for (var i = 0; i < str_formula.length; i++) {\n    state(str_formula[i]);\n  }\n  root_exp.push(buffer);\n  return root_exp;\n};\n","\"use strict\";\n\nconst RawValue = require('./RawValue.js');\nconst Range = require('./Range.js');\nconst str_2_val = require('./str_2_val.js');\nconst MS_PER_DAY = 24 * 60 * 60 * 1000;\nconst col_str_2_int = require('./col_str_2_int.js');\nconst int_2_col_str = require('./int_2_col_str.js');\nconst { getErrorValueByMessage } = require('./errors')\nvar exp_id = 0;\n\nfunction isMatrix(obj) {\n    return Array.isArray(obj) && (obj.length === 0 || Array.isArray(obj[0]));\n}\n\nmodule.exports = function Exp(formula) {\n    var self = this;\n    self.id = ++exp_id;\n    self.args = [];\n    self.name = 'Expression';\n    self.update_cell_value = update_cell_value;\n    self.formula = formula;\n    \n    function update_cell_value() {\n        try {\n            if (Array.isArray(self.args) \n                    && self.args.length === 1\n                    && self.args[0] instanceof Range) {\n                throw new Error('#VALUE!');\n            }\n            formula.cell.v = self.calc();\n            formula.cell.t = getCellType(formula.cell.v);\n            if (isMatrix(formula.cell.v)) {\n                const array = formula.cell.v;\n                formula.cell.v = undefined;\n                let cellsName = formula.name;\n                let colAndRow = cellsName.match(/([A-Z]+)([0-9]+)/);\n                let colNumber = col_str_2_int(colAndRow[1]);\n                let rowNumber = +colAndRow[2];\n                for (let i = 0; i < array.length; i++) {\n                    const newCellNumber = rowNumber + i;\n                    for (let j = 0; j < array[i].length; j++) {\n                        const newCellValue = array[i][j];\n                        const destinationColumn = j + colNumber;\n                        const destinationCellName = int_2_col_str(destinationColumn) + newCellNumber;\n                        let cell = formula.sheet[destinationCellName];\n                        if (!cell) {\n                            cell = {};\n                            formula.sheet[destinationCellName] = cell;\n                        }\n                        applyCellValue(cell, newCellValue);\n                    }\n                }\n            }\n        }\n        catch (e) {\n            if (!applyCellError(formula.cell, e)) {\n                throw e;\n            }\n        }\n        finally {\n            formula.status = 'done';\n        }\n    }\n\n    function applyCellError(cell, cellValueOrError) {\n        const error = cellValueOrError || {};\n        cell.t = 'e';\n        const errorValue = getErrorValueByMessage(error.message);\n        if (errorValue !== undefined) {\n            cell.w = error.message;\n            cell.v = errorValue;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function applyCellValue(cell, cellValueOrError) {\n        if (cellValueOrError instanceof Error) {\n            applyCellError(cell, cellValueOrError)\n        } else {\n            const newCellType = getCellType(cellValueOrError);\n            cell.v = cellValueOrError;\n            if (newCellType) cell.t = newCellType;\n        }\n    }\n\n    function getCellType(cellValue) {\n        if (typeof(cellValue) === 'string') {\n            return 's';\n        }\n        else if (typeof(cellValue) === 'number') {\n            return 'n';\n        }\n        else if (cellValue instanceof Error) {\n            return 'e';\n        }\n    }\n\n    function isEmpty(value) {\n        return value === undefined || value === null || value === \"\";\n    }\n    \n    function checkVariable(obj) {\n        if (typeof obj.calc !== 'function') {\n            throw new Error('Undefined ' + obj);\n        }\n    }\n\n    function getCurrentCellIndex() {\n        return +self.formula.name.replace(/[^0-9]/g, '');\n    }\n    \n    function exec(op, args, fn) {\n        for (var i = 0; i < args.length; i++) {\n            if (args[i] === op) {\n                try {\n                    if (i===0 && op==='+') {\n                        checkVariable(args[i + 1]);\n                        let r = args[i + 1].calc();\n                        args.splice(i, 2, new RawValue(r));\n                    } else {\n                        checkVariable(args[i - 1]);\n                        checkVariable(args[i + 1]);\n\n                        let a = args[i - 1].calc();\n                        let b = args[i + 1].calc();\n                        if (Array.isArray(a)) {\n                            a = a[getCurrentCellIndex() - 1][0];\n                        }\n                        if (Array.isArray(b)) {\n                            b = b[getCurrentCellIndex() - 1][0];\n                        }\n\n                        let r = fn(a, b);\n                        args.splice(i - 1, 3, new RawValue(r));\n                        i--;\n                    }\n                }\n                catch (e) {\n                    // console.log('[Exp.js] - ' + formula.name + ': evaluating ' + formula.cell.f + '\\n' + e.message);\n                    throw e;\n                }\n            }\n        }\n    }\n\n    function exec_minus(args) {\n        for (var i = args.length; i--;) {\n            if (args[i] === '-') {\n                checkVariable(args[i + 1]);\n                var b = args[i + 1].calc();\n                if (i > 0 && typeof args[i - 1] !== 'string') {\n                    args.splice(i, 1, '+');\n                    if (b instanceof Date) {\n                        b = Date.parse(b);\n                        checkVariable(args[i - 1]);\n                        var a = args[i - 1].calc();\n                        if (a instanceof Date) {\n                            a = Date.parse(a) / MS_PER_DAY;\n                            b = b / MS_PER_DAY;\n                            args.splice(i - 1, 1, new RawValue(a));\n                        }\n                    }\n                    args.splice(i + 1, 1, new RawValue(-b));\n                }\n                else {\n                    if (typeof b === 'string') {\n                        throw new Error('#VALUE!');\n                    }\n                    args.splice(i, 2, new RawValue(-b));\n                }\n            }\n        }\n    }\n\n\tfunction execNegativePow(args, fn) {\n        for (var i = 0; i < args.length - 2; i++) {\n            if ('^' === args[i] && '-' === args[i+1]) {\n                try {\n\t\t\t\t\tcheckVariable(args[i - 1]);\n\t\t\t\t\tcheckVariable(args[i + 2]);\n\n\t\t\t\t\tlet a = args[i - 1].calc();\n\t\t\t\t\tlet b = args[i + 2].calc();\n\t\t\t\t\tif (Array.isArray(a)) {\n\t\t\t\t\t\ta = a[getCurrentCellIndex() - 1][0];\n\t\t\t\t\t}\n\t\t\t\t\tif (Array.isArray(b)) {\n\t\t\t\t\t\tb = b[getCurrentCellIndex() - 1][0];\n\t\t\t\t\t}\n\n\t\t\t\t\tlet r = fn(a, b);\n\t\t\t\t\targs.splice(i - 1, 4, new RawValue(r));\n\t\t\t\t\ti--;\n                }\n                catch (e) {\n                    // console.log('[Exp.js] - ' + formula.name + ': evaluating ' + formula.cell.f + '\\n' + e.message);\n                    throw e;\n                }\n            }\n        }\n    }\n\n    self.calc = function() {\n        let args = self.args.concat();\n        execNegativePow(args, function(a, b) {\n            return Math.pow(+a, 0-b);\n        });\n        exec('^', args, function(a, b) {\n            return Math.pow(+a, +b);\n        });\n        exec_minus(args);\n        exec('/', args, function(a, b) {\n            if (b == 0) {\n                throw Error('#DIV/0!');\n            }\n            return (+a) / (+b);\n        });\n        exec('*', args, function(a, b) {\n            return (+a) * (+b);\n        });\n        exec('+', args, function(a, b) {\n            if (a instanceof Date && typeof b === 'number') {\n                b = b * MS_PER_DAY;\n            }\n            return (+a) + (+b);\n        });\n        exec('&', args, function(a, b) {\n            return '' + a + b;\n        });\n        exec('<', args, function(a, b) {\n            return a < b;\n        });\n        exec('>', args, function(a, b) {\n            return a > b;\n        });\n        exec('>=', args, function(a, b) {\n            return a >= b;\n        });\n        exec('<=', args, function(a, b) {\n            return a <= b;\n        });\n        exec('<>', args, function(a, b) {\n            if (a instanceof Date && b instanceof Date) {\n                return a.getTime() !== b.getTime();\n            }\n            if (isEmpty(a) && isEmpty(b)) {\n                return false;\n            }\n            return a !== b;\n        });\n        exec('=', args, function(a, b) {\n            if (a instanceof Date && b instanceof Date) {\n                return a.getTime() === b.getTime();\n            }\n            if (isEmpty(a) && isEmpty(b)) {\n                return true;\n            }\n            if ((a == null && b === 0) || (a === 0 && b == null)) {\n                return true;\n            }\n            if (typeof a === 'string' && typeof b === 'string' && a.toLowerCase() === b.toLowerCase()) {\n                return true;\n            }\n            return a === b;\n        });\n        if (args.length == 1) {\n            if (typeof(args[0].calc) !== 'function') {\n                return args[0];\n            }\n            else {\n                return args[0].calc();\n            }\n        }\n    };\n\n    var last_arg;\n    self.push = function(buffer) {\n        if (buffer) {\n            var v = str_2_val(buffer, formula);\n            if (((v === '=') && (last_arg == '>' || last_arg == '<')) || (last_arg == '<' && v === '>')) {\n                self.args[self.args.length - 1] += v;\n            }\n            else {\n                self.args.push(v);\n            }\n            last_arg = v;\n            //console.log(self.id, '-->', v);\n        }\n    };\n};","\"use strict\";\n\nmodule.exports = function LazyValue(fn) {\n    this.calc = function() {\n        return fn();\n    };\n};\n","\"use strict\";\n\nconst { getErrorValueByMessage } = require('./errors')\n\nmodule.exports = function UserFnExecutor(user_function) {\n    var self = this;\n    self.name = 'UserFn';\n    self.args = [];\n    self.calc = function () {\n        var result;\n        try {\n            result = user_function.apply(self, self.args.map(f => f.calc()));\n        } catch (e) {\n            const errorValue = getErrorValueByMessage(e.message)\n            if (user_function.name === 'is_blank'\n                && errorValue !== undefined) {\n                // is_blank applied to an error cell doesn't propagate the error\n                result = 0;\n            }\n            else if (user_function.name === 'iserror'\n                && errorValue !== undefined) {\n                // iserror applied to an error doesn't propagate the error and returns true\n                result = true;\n            }\n            else {\n                throw e;\n            }\n        }\n        return result;\n    };\n    self.push = function (buffer) {\n        self.args.push(buffer);\n    };\n};","\"use strict\";\n\nmodule.exports = function UserRawFnExecutor(user_function, formula) {\n    var self = this;\n    self.name = 'UserRawFn';\n    self.args = [];\n    self.calc = function() {\n        try {\n            return user_function.apply(self, self.args);\n        } catch(e) {\n            // debug\n            // console.log('----------------', user_function);\n            // console.log(formula.name);\n            // console.log(self);\n            throw e;\n        }\n    };\n    self.push = function(buffer) {\n        self.args.push(buffer);\n    };\n};\n","\"use strict\";\nconst utils = require(\"./utils\");\nconst error = require(\"./errors\");\n\n// +---------------------+\n// | FORMULAS REGISTERED |\n// +---------------------+\nlet formulas = {\n  FLOOR: Math.floor,\n  \"_xlfn.FLOOR.MATH\": Math.floor,\n  \"FLOOR.MATH\": Math.floor,\n  ABS: Math.abs,\n  SQRT: Math.sqrt,\n  VLOOKUP: vlookup,\n  MAX: max,\n  SUM: sum,\n  MIN: min,\n  CONCATENATE: concatenate,\n  PMT: pmt,\n  COUNTA: counta,\n  IRR: irr,\n  \"NORM.INV\": normsInv,\n  \"_xlfn.NORM.INV\": normsInv,\n  STDEV: stDeviation,\n  AVERAGE: avg,\n  EXP: EXP,\n  LN: Math.log,\n  \"_xlfn.VAR.P\": var_p,\n  \"VAR.P\": var_p,\n  \"_xlfn.COVARIANCE.P\": covariance_p,\n  \"COVARIANCE.P\": covariance_p,\n  TRIM: trim,\n  LEN: len,\n  ISBLANK: is_blank,\n  HLOOKUP: hlookup,\n  INDEX: index,\n  MATCH: match,\n  SUMPRODUCT: sumproduct,\n  ISNUMBER: isnumber,\n  TODAY: today,\n  ISERROR: iserror,\n  TIME: time,\n  DAY: day,\n  MONTH: month,\n  YEAR: year,\n  RIGHT: right,\n  LEFT: left,\n  IFS: ifs,\n  ROUND: round,\n  CORREL: correl, // missing test\n  SUMIF: sumif, // missing test,\n  CHOOSE: choose,\n  SUBSTITUTE: substitute,\n  CEILING: ceiling,\n  FILTER: throwErrors(FILTER),\n};\n\nfunction choose(option) {\n  return arguments[option];\n}\n\nfunction sumif() {\n  let elementToSum = arguments[1];\n  let sumResult = 0;\n\n  [].slice.call(arguments)[0][0].forEach((elt, key) => {\n    if (elt !== null) {\n      //if the element is not a string but a number, number has no replace function, so converting to string.\n      elt = elt.toString();\n      if (elt.replace(/\\'/g, \"\") === elementToSum) {\n        if (!isNaN([].slice.call(arguments)[2][0][key])) {\n          sumResult += [].slice.call(arguments)[2][0][key];\n        }\n      }\n    }\n  });\n  return sumResult;\n}\n\nfunction correl(a, b) {\n  a = getArrayOfNumbers(a);\n  b = getArrayOfNumbers(b);\n\n  if (a.length !== b.length) {\n    return \"N/D\";\n  }\n  var inv_n = 1.0 / (a.length - 1);\n  var avg_a = sum.apply(this, a) / a.length;\n  var avg_b = sum.apply(this, b) / b.length;\n  var s = 0.0;\n  var sa = 0;\n  var sb = 0;\n  for (var i = 0; i < a.length; i++) {\n    s += (a[i] - avg_a) * (b[i] - avg_b);\n\n    sa += Math.pow(a[i], 2);\n    sb += Math.pow(b[i], 2);\n  }\n\n  sa = Math.sqrt(sa / inv_n);\n  sb = Math.sqrt(sb / inv_n);\n\n  return s / (inv_n * sa * sb);\n}\n\nfunction round(value, decimalPlaces) {\n  if (arguments.length === 0) throw new Error(\"Err:511\");\n  if (arguments.length === 1) return Math.round(value);\n  let roundMeasure = Math.pow(10, decimalPlaces);\n  return Math.round(roundMeasure * value) / roundMeasure;\n}\n\nfunction today() {\n  var today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today;\n}\n\nfunction isnumber(x) {\n  return !isNaN(x);\n}\n\nfunction sumproduct() {\n  var parseNumber = function (string) {\n      if (string === undefined || string === \"\" || string === null) {\n        return 0;\n      }\n      if (!isNaN(string)) {\n        return parseFloat(string);\n      }\n      return 0;\n    },\n    consistentSizeRanges = function (matrixArray) {\n      var getRowCount = function (matrix) {\n          return matrix.length;\n        },\n        getColCount = function (matrix) {\n          return matrix[0].length;\n        },\n        rowCount = getRowCount(matrixArray[0]),\n        colCount = getColCount(matrixArray[0]);\n\n      for (var i = 1; i < matrixArray.length; i++) {\n        if (\n          getRowCount(matrixArray[i]) !== rowCount ||\n          getColCount(matrixArray[i]) !== colCount\n        ) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n  if (!arguments || arguments.length === 0) {\n    throw Error(\"#VALUE!\");\n  }\n  if (!consistentSizeRanges(arguments)) {\n    throw Error(\"#VALUE!\");\n  }\n  // throw error if any of the cells passed in arguments is in error\n  for (var i = 0; i < arguments.length; i++) {\n    var row = arguments[i];\n    if (Array.isArray(row)) {\n      for (var j = 0; j < row.length; j++) {\n        var col = row[j];\n        if (Array.isArray(col)) {\n          for (var k = 0; k < col.length; k++) {\n            var cell = col[k];\n            if (cell && typeof cell === \"object\" && cell.t === \"e\") {\n              throw Error(cell.w);\n            }\n          }\n        } else {\n          var cell = col;\n          if (cell && typeof cell === \"object\" && cell.t === \"e\") {\n            throw Error(cell.w);\n          }\n        }\n      }\n    } else {\n      var cell = row;\n      if (cell && typeof cell === \"object\" && cell.t === \"e\") {\n        throw Error(cell.w);\n      }\n    }\n  }\n\n  var arrays = arguments.length + 1;\n  var result = 0;\n  var product;\n  var k;\n  var _i;\n  var _ij;\n  for (var i = 0; i < arguments[0].length; i++) {\n    if (!(arguments[0][i] instanceof Array)) {\n      product = 1;\n      for (k = 1; k < arrays; k++) {\n        _i = parseNumber(arguments[k - 1][i]);\n\n        product *= _i;\n      }\n      result += product;\n    } else {\n      for (var j = 0; j < arguments[0][i].length; j++) {\n        product = 1;\n        for (k = 1; k < arrays; k++) {\n          _ij = parseNumber(arguments[k - 1][i][j]);\n\n          product *= _ij;\n        }\n        result += product;\n      }\n    }\n  }\n  return result;\n}\n\nfunction match_less_than_or_equal(matrix, lookupValue) {\n  var index;\n  var indexValue;\n  for (var idx = 0; idx < matrix.length; idx++) {\n    if (matrix[idx] === lookupValue) {\n      return idx + 1;\n    } else if (matrix[idx] < lookupValue) {\n      if (!indexValue) {\n        index = idx + 1;\n        indexValue = matrix[idx];\n      } else if (matrix[idx] > indexValue) {\n        index = idx + 1;\n        indexValue = matrix[idx];\n      }\n    }\n  }\n  if (!index) {\n    throw Error(\"#N/A\");\n  }\n  return index;\n}\n\nfunction match_exactly_string(matrix, lookupValue) {\n  for (var idx = 0; idx < matrix.length; idx++) {\n    lookupValue = lookupValue.replace(/\\?/g, \".\");\n    if (Array.isArray(matrix[idx])) {\n      if (matrix[idx].length === 1 && typeof matrix[idx][0] === \"string\") {\n        if (matrix[idx][0].toLowerCase() === lookupValue.toLowerCase()) {\n          return idx + 1;\n        }\n      }\n    } else if (typeof matrix[idx] === \"string\") {\n      if (matrix[idx].toLowerCase() === lookupValue.toLowerCase()) {\n        return idx + 1;\n      }\n    }\n  }\n  throw Error(\"#N/A\");\n}\n\nfunction match_exactly_non_string(matrix, lookupValue) {\n  for (var idx = 0; idx < matrix.length; idx++) {\n    if (Array.isArray(matrix[idx])) {\n      if (matrix[idx].length === 1) {\n        if (matrix[idx][0] === lookupValue) {\n          return idx + 1;\n        }\n      }\n    } else if (matrix[idx] === lookupValue) {\n      return idx + 1;\n    }\n  }\n  throw Error(\"#N/A\");\n}\n\n// +---------------------+\n// | THE IMPLEMENTATIONS |\n// +---------------------+\n\nfunction match_greater_than_or_equal(matrix, lookupValue) {\n  var index;\n  var indexValue;\n  for (var idx = 0; idx < matrix.length; idx++) {\n    if (Array.isArray(matrix[idx]) && matrix[idx].length > 0) {\n      // For array in column\n      if (matrix[idx][0] === lookupValue) {\n        return idx + 1;\n      } else if (matrix[idx][0] > lookupValue) {\n        if (!indexValue) {\n          index = idx + 1;\n          indexValue = matrix[idx][0];\n        } else if (matrix[idx][0] < indexValue) {\n          index = idx + 1;\n          indexValue = matrix[idx][0];\n        }\n      }\n    } else {\n      // For array in row\n      if (matrix[idx] === lookupValue) {\n        return idx + 1;\n      } else if (matrix[idx] > lookupValue) {\n        if (!indexValue) {\n          index = idx + 1;\n          indexValue = matrix[idx];\n        } else if (matrix[idx] < indexValue) {\n          index = idx + 1;\n          indexValue = matrix[idx];\n        }\n      }\n    }\n  }\n  if (!index) {\n    throw Error(\"#N/A\");\n  }\n  return index;\n}\n\nfunction match(lookupValue, matrix, matchType) {\n  if (\n    Array.isArray(matrix) &&\n    matrix.length === 1 &&\n    Array.isArray(matrix[0])\n  ) {\n    matrix = matrix[0];\n  }\n  if (!lookupValue && !matrix) {\n    throw Error(\"#N/A\");\n  }\n  if (arguments.length === 2) {\n    matchType = 1;\n  }\n  if (!(matrix instanceof Array)) {\n    throw Error(\"#N/A\");\n  }\n  if (matchType === 0) {\n    if (typeof lookupValue === \"string\") {\n      return match_exactly_string(matrix, lookupValue);\n    } else {\n      return match_exactly_non_string(matrix, lookupValue);\n    }\n  } else if (matchType === 1) {\n    return match_less_than_or_equal(matrix, lookupValue);\n  } else if (matchType === -1) {\n    return match_greater_than_or_equal(matrix, lookupValue);\n  } else {\n    throw Error(\"#N/A\");\n  }\n}\n\nfunction index(matrix, row_num, column_num) {\n  if (row_num <= matrix.length) {\n    var row = matrix[row_num - 1];\n    if (Array.isArray(row)) {\n      if (!column_num) {\n        return row;\n      } else if (column_num <= row.length) {\n        return row[column_num - 1];\n      }\n    } else {\n      return matrix[row_num];\n    }\n  } else if (matrix.length === 1) {\n    // If there is only 1 row, the first argument (row_num) should index the column instead\n    var row = matrix[0];\n    if (Array.isArray(row)) {\n      if (row_num <= row.length) {\n        return row[row_num - 1];\n      }\n    }\n  }\n  throw Error(\"#REF!\");\n}\n\n// impl ported from https://github.com/FormulaPages/hlookup\nfunction hlookup(needle, table, index, exactmatch) {\n  if (typeof needle === \"undefined\" || (0, is_blank)(needle)) {\n    throw Error(\"#N/A\");\n  }\n\n  index = index || 0;\n  let row = table[0],\n    i,\n    searchingFor;\n\n  if (typeof needle === \"string\") {\n    searchingFor = needle.toLowerCase();\n    for (i = 0; i < row.length; i++) {\n      if (\n        (exactmatch && row[i] === searchingFor) ||\n        row[i].toLowerCase().indexOf(searchingFor) !== -1\n      ) {\n        return index < table.length + 1 ? table[index - 1][i] : table[0][i];\n      }\n    }\n  } else {\n    searchingFor = needle;\n    for (i = 0; i < row.length; i++) {\n      if ((exactmatch && row[i] === searchingFor) || row[i] === searchingFor) {\n        return index < table.length + 1 ? table[index - 1][i] : table[0][i];\n      }\n    }\n  }\n  throw Error(\"#N/A\");\n}\n\nfunction len(a) {\n  return (\"\" + a).length;\n}\n\nfunction trim(a) {\n  return (\"\" + a).trim();\n}\n\nfunction is_blank(a) {\n  // console.log(a)\n  return !a;\n}\n\nfunction covariance_p(a, b) {\n  a = getArrayOfNumbers(a);\n  b = getArrayOfNumbers(b);\n  if (a.length != b.length) {\n    return \"N/D\";\n  }\n  var inv_n = 1.0 / a.length;\n  var avg_a = sum.apply(this, a) / a.length;\n  var avg_b = sum.apply(this, b) / b.length;\n  var s = 0.0;\n  for (var i = 0; i < a.length; i++) {\n    s += (a[i] - avg_a) * (b[i] - avg_b);\n  }\n  return s * inv_n;\n}\n\nfunction getArrayOfNumbers(range) {\n  var arr = [];\n  for (var i = 0; i < range.length; i++) {\n    var arg = range[i];\n    if (Array.isArray(arg)) {\n      var matrix = arg;\n      for (var j = matrix.length; j--; ) {\n        if (typeof matrix[j] == \"number\") {\n          arr.push(matrix[j]);\n        } else if (Array.isArray(matrix[j])) {\n          for (var k = matrix[j].length; k--; ) {\n            if (typeof matrix[j][k] == \"number\") {\n              arr.push(matrix[j][k]);\n            }\n          }\n        }\n        // else {\n        //   wtf is that?\n        // }\n      }\n    } else {\n      if (typeof arg == \"number\") {\n        arr.push(arg);\n      }\n    }\n  }\n  return arr;\n}\n\nfunction var_p() {\n  var average = avg.apply(this, arguments);\n  var s = 0.0;\n  var c = 0;\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n    if (Array.isArray(arg)) {\n      var matrix = arg;\n      for (var j = matrix.length; j--; ) {\n        for (var k = matrix[j].length; k--; ) {\n          if (matrix[j][k] !== null && matrix[j][k] !== undefined) {\n            s += Math.pow(matrix[j][k] - average, 2);\n            c++;\n          }\n        }\n      }\n    } else {\n      s += Math.pow(arg - average, 2);\n      c++;\n    }\n  }\n  return s / c;\n}\n\nfunction EXP(n) {\n  return Math.pow(Math.E, n);\n}\n\nfunction avg() {\n  var aux = counta.apply(this, arguments);\n  if (aux == 0) {\n    throw Error(\"#DIV/0!\");\n  }\n  return sum.apply(this, arguments) / aux;\n}\n\nfunction stDeviation() {\n  var array = getArrayOfNumbers(arguments);\n\n  function _mean(array) {\n    return (\n      array.reduce(function (a, b) {\n        return a + b;\n      }) / array.length\n    );\n  }\n  var mean = _mean(array),\n    dev = array.map(function (itm) {\n      return (itm - mean) * (itm - mean);\n    });\n  return Math.sqrt(\n    dev.reduce(function (a, b) {\n      return a + b;\n    }) /\n      (array.length - 1)\n  );\n}\n\n/// Original C++ implementation found at http://www.wilmott.com/messageview.cfm?catid=10&threadid=38771\n/// C# implementation found at http://weblogs.asp.net/esanchez/archive/2010/07/29/a-quick-and-dirty-implementation-of-excel-norminv-function-in-c.aspx\n/*\n *     Compute the quantile function for the normal distribution.\n *\n *     For small to moderate probabilities, algorithm referenced\n *     below is used to obtain an initial approximation which is\n *     polished with a final Newton step.\n *\n *     For very large arguments, an algorithm of Wichura is used.\n *\n *  REFERENCE\n *\n *     Beasley, J. D. and S. G. Springer (1977).\n *     Algorithm AS 111: The percentage points of the normal distribution,\n *     Applied Statistics, 26, 118-121.\n *\n *      Wichura, M.J. (1988).\n *      Algorithm AS 241: The Percentage Points of the Normal Distribution.\n *      Applied Statistics, 37, 477-484.\n */\nfunction normsInv(p, mu, sigma) {\n  if (p < 0 || p > 1) {\n    throw \"The probality p must be bigger than 0 and smaller than 1\";\n  }\n  if (sigma < 0) {\n    throw \"The standard deviation sigma must be positive\";\n  }\n\n  if (p == 0) {\n    return -Infinity;\n  }\n  if (p == 1) {\n    return Infinity;\n  }\n  if (sigma == 0) {\n    return mu;\n  }\n\n  var q, r, val;\n\n  q = p - 0.5;\n\n  /*-- use AS 241 --- */\n  /* double ppnd16_(double *p, long *ifault)*/\n  /*      ALGORITHM AS241  APPL. STATIST. (1988) VOL. 37, NO. 3\n            Produces the normal deviate Z corresponding to a given lower\n            tail area of P; Z is accurate to about 1 part in 10**16.\n    */\n  if (Math.abs(q) <= 0.425) {\n    /* 0.075 <= p <= 0.925 */\n    r = 0.180625 - q * q;\n    val =\n      (q *\n        (((((((r * 2509.0809287301226727 + 33430.575583588128105) * r +\n          67265.770927008700853) *\n          r +\n          45921.953931549871457) *\n          r +\n          13731.693765509461125) *\n          r +\n          1971.5909503065514427) *\n          r +\n          133.14166789178437745) *\n          r +\n          3.387132872796366608)) /\n      (((((((r * 5226.495278852854561 + 28729.085735721942674) * r +\n        39307.89580009271061) *\n        r +\n        21213.794301586595867) *\n        r +\n        5394.1960214247511077) *\n        r +\n        687.1870074920579083) *\n        r +\n        42.313330701600911252) *\n        r +\n        1);\n  } else {\n    /* closer than 0.075 from {0,1} boundary */\n\n    /* r = min(p, 1-p) < 0.075 */\n    if (q > 0) r = 1 - p;\n    else r = p;\n\n    r = Math.sqrt(-Math.log(r));\n    /* r = sqrt(-log(r))  <==>  min(p, 1-p) = exp( - r^2 ) */\n\n    if (r <= 5) {\n      /* <==> min(p,1-p) >= exp(-25) ~= 1.3888e-11 */\n      r += -1.6;\n      val =\n        (((((((r * 7.7454501427834140764e-4 + 0.0227238449892691845833) * r +\n          0.24178072517745061177) *\n          r +\n          1.27045825245236838258) *\n          r +\n          3.64784832476320460504) *\n          r +\n          5.7694972214606914055) *\n          r +\n          4.6303378461565452959) *\n          r +\n          1.42343711074968357734) /\n        (((((((r * 1.05075007164441684324e-9 + 5.475938084995344946e-4) * r +\n          0.0151986665636164571966) *\n          r +\n          0.14810397642748007459) *\n          r +\n          0.68976733498510000455) *\n          r +\n          1.6763848301838038494) *\n          r +\n          2.05319162663775882187) *\n          r +\n          1);\n    } else {\n      /* very close to  0 or 1 */\n      r += -5;\n      val =\n        (((((((r * 2.01033439929228813265e-7 + 2.71155556874348757815e-5) * r +\n          0.0012426609473880784386) *\n          r +\n          0.026532189526576123093) *\n          r +\n          0.29656057182850489123) *\n          r +\n          1.7848265399172913358) *\n          r +\n          5.4637849111641143699) *\n          r +\n          6.6579046435011037772) /\n        (((((((r * 2.04426310338993978564e-15 + 1.4215117583164458887e-7) * r +\n          1.8463183175100546818e-5) *\n          r +\n          7.868691311456132591e-4) *\n          r +\n          0.0148753612908506148525) *\n          r +\n          0.13692988092273580531) *\n          r +\n          0.59983220655588793769) *\n          r +\n          1);\n    }\n\n    if (q < 0.0) {\n      val = -val;\n    }\n  }\n\n  return mu + sigma * val;\n}\n\nfunction irr(range, guess) {\n  var min = -2.0;\n  var max = 1.0;\n  var n = 0;\n  do {\n    var guest = (min + max) / 2;\n    var NPV = 0;\n    for (var i = 0; i < range.length; i++) {\n      var arg = range[i];\n      NPV += arg[0] / Math.pow(1 + guest, i);\n    }\n    if (NPV > 0) {\n      if (min === max) {\n        max += Math.abs(guest);\n      }\n      min = guest;\n    } else {\n      max = guest;\n    }\n    n++;\n  } while (Math.abs(NPV) > 0.000001 && n < 100000);\n  //console.log(n);\n  return guest;\n}\n\nfunction counta() {\n  var r = 0;\n  for (var i = arguments.length; i--; ) {\n    var arg = arguments[i];\n    if (Array.isArray(arg)) {\n      var matrix = arg;\n      for (var j = matrix.length; j--; ) {\n        for (var k = matrix[j].length; k--; ) {\n          if (matrix[j][k] !== null && matrix[j][k] !== undefined) {\n            r++;\n          }\n        }\n      }\n    } else {\n      if (arg !== null && arg !== undefined) {\n        r++;\n      }\n    }\n  }\n  return r;\n}\n\nfunction pmt(\n  rate_per_period,\n  number_of_payments,\n  present_value,\n  future_value,\n  type\n) {\n  type = type || 0;\n  future_value = future_value || 0;\n  if (rate_per_period != 0.0) {\n    // Interest rate exists\n    var q = Math.pow(1 + rate_per_period, number_of_payments);\n    return (\n      -(rate_per_period * (future_value + q * present_value)) /\n      ((-1 + q) * (1 + rate_per_period * type))\n    );\n  } else if (number_of_payments != 0.0) {\n    // No interest rate, but number of payments exists\n    return -(future_value + present_value) / number_of_payments;\n  }\n  return 0;\n}\n\nfunction concatenate() {\n  var r = \"\";\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n    if (arg === null || arg === undefined) continue;\n    r += arg;\n  }\n  return r;\n}\n\nfunction sum() {\n  var r = 0;\n  for (var i = arguments.length; i--; ) {\n    var arg = arguments[i];\n    if (Array.isArray(arg)) {\n      var matrix = arg;\n      for (var j = matrix.length; j--; ) {\n        for (var k = matrix[j].length; k--; ) {\n          if (!isNaN(matrix[j][k])) {\n            r += +matrix[j][k];\n          }\n        }\n      }\n    } else {\n      r += +arg;\n    }\n  }\n  return r;\n}\n\nfunction max() {\n  var max = null;\n  for (var i = arguments.length; i--; ) {\n    var arg = arguments[i];\n    if (Array.isArray(arg)) {\n      var arr = arg;\n      for (var j = arr.length; j--; ) {\n        var col = arr[j];\n        if (Array.isArray(col)) {\n          for (var k = col.length; k--; ) {\n            if (max == null || (col[k] != null && max < col[k])) {\n              max = col[k];\n            }\n          }\n        } else if (max == null || (col != null && max < col)) {\n          max = col;\n        }\n      }\n    } else if (!isNaN(arg) && (max == null || (arg != null && max < arg))) {\n      max = arg;\n    }\n  }\n  return max;\n}\n\nfunction min() {\n  var min = null;\n  for (var i = arguments.length; i--; ) {\n    var arg = arguments[i];\n    if (Array.isArray(arg)) {\n      var arr = arg;\n      for (var j = arr.length; j--; ) {\n        var col = arr[j];\n        if (Array.isArray(col)) {\n          for (var k = col.length; k--; ) {\n            if (min == null || (col[k] != null && min > col[k])) {\n              min = col[k];\n            }\n          }\n        } else if (min == null || (col != null && min > col)) {\n          min = col;\n        }\n      }\n    } else if (!isNaN(arg) && (min == null || (arg != null && min > arg))) {\n      min = arg;\n    }\n  }\n  return min;\n}\n\nfunction vlookup(key, matrix, return_index, range_lookup = true) {\n  var val = null;\n  for (var i = 0; i < matrix.length; i++) {\n    if (matrix[i][0] < key) {\n      val = matrix[i][return_index - 1];\n    } else if (matrix[i][0] == key) {\n      return matrix[i][return_index - 1];\n    }\n  }\n  if (range_lookup && val) {\n    return val;\n  }\n  throw Error(\"#N/A\");\n}\n\nfunction iserror() {\n  // if an error is catched before getting there, true will be returned from the catch block\n  // if we get here then it's not an error\n  return false;\n}\n\nfunction time(hours, minutes, seconds) {\n  const MS_PER_DAY = 24 * 60 * 60 * 1000;\n  return (((hours * 60 + minutes) * 60 + seconds) * 1000) / MS_PER_DAY;\n}\n\nfunction day(date) {\n  if (!date.getDate) {\n    throw Error(\"#VALUE!\");\n  }\n  var day = date.getDate();\n  if (isNaN(day)) {\n    throw Error(\"#VALUE!\");\n  }\n  return day;\n}\n\nfunction month(date) {\n  if (!date.getMonth) {\n    throw Error(\"#VALUE!\");\n  }\n  var month = date.getMonth();\n  if (isNaN(month)) {\n    throw Error(\"#VALUE!\");\n  }\n  return month + 1;\n}\n\nfunction year(date) {\n  if (!date.getFullYear) {\n    throw Error(\"#VALUE!\");\n  }\n  var year = date.getFullYear();\n  if (isNaN(year)) {\n    throw Error(\"#VALUE!\");\n  }\n  return year;\n}\n\nfunction right(text, number) {\n  number = number === undefined ? 1 : parseFloat(number);\n\n  if (isNaN(number)) {\n    throw Error(\"#VALUE!\");\n  }\n  if (text === undefined || text === null) {\n    text = \"\";\n  } else {\n    text = \"\" + text;\n  }\n  return text.substring(text.length - number);\n}\n\nfunction left(text, number) {\n  number = number === undefined ? 1 : parseFloat(number);\n\n  if (isNaN(number)) {\n    throw Error(\"#VALUE!\");\n  }\n  if (text === undefined || text === null) {\n    text = \"\";\n  } else {\n    text = \"\" + text;\n  }\n  return text.substring(0, number);\n}\n\nfunction ifs(/*_cond1, _val1, _cond2, _val2, _cond3, _val3, ... */) {\n  for (var i = 0; i + 1 < arguments.length; i += 2) {\n    var cond = arguments[i];\n    var val = arguments[i + 1];\n    if (cond) {\n      return val;\n    }\n  }\n  throw Error(\"#N/A\");\n}\n\nfunction escapeRegExp(str) {\n  return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n}\n\nfunction substitute(text, old_text, new_text, occurrence) {\n  if (occurrence <= 0) {\n    throw Error(\"#VALUE!\");\n  }\n  if (!text || !old_text || (!new_text && new_text !== \"\")) {\n    return text;\n  } else if (occurrence === undefined) {\n    return text.replace(new RegExp(escapeRegExp(old_text), \"g\"), new_text);\n  } else {\n    var index = 0;\n    var i = 0;\n    while (text.indexOf(old_text, index) > 0) {\n      index = text.indexOf(old_text, index + 1);\n      i++;\n      if (i === occurrence) {\n        return (\n          text.substring(0, index) +\n          new_text +\n          text.substring(index + old_text.length)\n        );\n      }\n    }\n  }\n}\n\nfunction ceiling(number, significance) {\n  return Math.ceil(number / significance) * significance;\n}\n/**\n * Filters an array based on a Boolean (True/False) array.\n *\n * Category: Lookup and reference\n *\n * @param {*} array The array, or range to filter. E.g. [[1,2,3],[4,5,6]]\n * @param {*} include A boolean array whose height or width is the same as the array. E.g. [[true, false, true]] OR [[true],[false]]\n * @param {*} if_empty Optional. The value to return if all values in the included array are empty (filter returns nothing). E.g. \"No results\"\n * @returns\n */\nfunction FILTER(array, include, if_empty) {\n  // correct types\n  if (!array || !include) {\n    return error.na;\n  }\n\n  if (!(array instanceof Array)) {\n    return error.na;\n  }\n\n  if (!(include instanceof Array)) {\n    return error.na;\n  }\n\n  // array lengths must be greater than 0 and symmetrical\n  if (array.length === 0) {\n    return error.na;\n  }\n\n  if (include.length === 0) {\n    return error.na;\n  }\n\n  for (let i = 0; i < array.length; i++) {\n    if (!(array[i] instanceof Array)) {\n      return error.na;\n    }\n\n    if (array[i].length === 0) {\n      return error.na;\n    }\n\n    if (array[i].length !== array[0].length) {\n      return error.na;\n    }\n  }\n\n  for (let i = 0; i < include.length; i++) {\n    if (!(include[i] instanceof Array)) {\n      return error.na;\n    }\n\n    if (include[i].length === 0) {\n      return error.na;\n    }\n\n    if (include[i].length !== include[0].length) {\n      return error.na;\n    }\n  }\n\n  const arrayWidth = array[0].length;\n  const arrayHeight = array.length;\n  const includeWidth = include[0].length;\n  const includeHeight = include.length;\n\n  // include array must have same width or height as array (and generally not both)\n  if (arrayWidth !== includeWidth && arrayHeight !== includeHeight) {\n    return error.na;\n  }\n\n  if (\n    arrayHeight > 1 &&\n    arrayWidth > 1 &&\n    ((arrayWidth === includeWidth && includeHeight !== 1) ||\n      (arrayHeight === includeHeight && includeWidth !== 1))\n  ) {\n    return error.na;\n  }\n\n  if (\n    arrayHeight > 1 &&\n    arrayWidth === 1 &&\n    (includeWidth !== 1 ||\n      (includeHeight !== 1 && includeHeight !== arrayHeight))\n  ) {\n    return error.na;\n  }\n\n  // filter\n  const result = [];\n  for (let i = 0; i < arrayHeight; i++) {\n    const row = [];\n    for (let j = 0; j < arrayWidth; j++) {\n      const value =\n        getMatrixValueForFilter(include, i, j) ||\n        getMatrixValueForFilter(include, 0, j) ||\n        getMatrixValueForFilter(include, i, 0);\n      const bool = utils.parseBool(value);\n      if (bool === true) row.push(array[i][j]);\n      else if (bool instanceof Error)\n        return utils.addEmptyValuesToArray([[bool]], arrayWidth, arrayHeight);\n    }\n    if (row.length > 0) result.push(row);\n  }\n\n  if (result.length === 0) {\n    if (if_empty != null) {\n      return utils.addEmptyValuesToArray([[if_empty]], arrayWidth, arrayHeight);\n    }\n\n    return utils.addEmptyValuesToArray([[error.calc]], arrayWidth, arrayHeight);\n  }\n\n  return utils.addEmptyValuesToArray(result, arrayWidth, arrayHeight);\n}\n\nfunction getMatrixValueForFilter(matrix, i, j) {\n  if (matrix[i]) {\n    if (matrix[i][j] === false) {\n      return \"FALSE\";\n    }\n    return matrix[i][j];\n  }\n}\n\nfunction throwErrors(someFormula) {\n  return function () {\n    const result = someFormula.apply(this, arguments);\n    if (result instanceof Error) {\n      throw result;\n    }\n    return result;\n  };\n}\n\nmodule.exports = formulas;\n","const error = require('./errors')\n\nfunction parseBool(bool) {\n    if (typeof bool === 'boolean') {\n        return bool\n    }\n\n    if (bool instanceof Error) {\n        return bool\n    }\n\n    if (typeof bool === 'number') {\n        return bool !== 0\n    }\n\n    if (typeof bool === 'string') {\n        const up = bool.toUpperCase()\n\n        if (up === 'TRUE') {\n            return true\n        }\n\n        if (up === 'FALSE') {\n            return false\n        }\n    }\n\n    if (bool instanceof Date && !isNaN(bool)) {\n        return true\n    }\n\n    return error.value\n}\n\n// E.g. addEmptyValuesToArray([[1]], 2, 2) => [[1, \"\"], [\"\", \"\"]]\nfunction addEmptyValuesToArray(array, requiredLength, requiredHeight) {\n    if (!array || !requiredLength || !requiredHeight) {\n        return array\n    }\n\n    if (requiredLength < 0 || requiredHeight < 0) {\n        return array\n    }\n\n    // array must be a square matrix\n    if (!Array.isArray(array) || !array.length) return array;\n    for (let i = 0; i < array.length; i++) {\n        if (!(array[i] instanceof Array)) return array\n    }\n\n    // add empty values to columns\n    for (let i = 0; i < array.length; i++) {\n        if (array[i].length < requiredLength) {\n            for (let j = array[i].length; j < requiredLength; j++) {\n                array[i].push('')\n            }\n        }\n    }\n\n    // add empty values to rows\n    if (array.length < requiredHeight) {\n        for (let i = array.length; i < requiredHeight; i++) {\n            array.push([])\n            for (let j = 0; j < requiredLength; j++) {\n                array[i].push('')\n            }\n        }\n    }\n\n    return array\n}\n\nmodule.exports = {\n    addEmptyValuesToArray,\n    parseBool,\n}","\"use strict\";\n\nconst int_2_col_str = require('./int_2_col_str.js');\nconst col_str_2_int = require('./col_str_2_int.js');\nconst RawValue = require('./RawValue.js');\nconst Range = require('./Range.js');\nconst RefValue = require('./RefValue.js');\n\nfunction raw_offset(cell_ref, rows, columns, height, width) {\n    height = (height || new RawValue(1)).calc();\n    width = (width || new RawValue(1)).calc();\n    if (cell_ref.args.length === 1 && cell_ref.args[0].name === 'RefValue') {\n        var ref_value = cell_ref.args[0];\n        var parsed_ref = ref_value.parseRef();\n        var col = col_str_2_int(parsed_ref.cell_name) + columns.calc();\n        var col_str = int_2_col_str(col);\n        var row = +parsed_ref.cell_name.replace(/^[A-Z]+/g, '') + rows.calc();\n        var cell_name = parsed_ref.sheet_name + '!' + col_str + row;\n        if (height === 1 && width === 1) {\n            return new RefValue(cell_name, ref_value.formula).calc();\n        }\n        else {\n            var end_range_col = int_2_col_str(col + width - 1);\n            var end_range_row = row + height - 1;\n            var end_range = end_range_col + end_range_row;\n            var str_expression = cell_name + ':' + end_range;\n            return new Range(str_expression, ref_value.formula).calc();\n        }\n    }\n}\n\nfunction iferror(cell_ref, onerrorvalue) {\n    try {\n        var value = cell_ref.calc();\n        if (typeof value === 'number' && (isNaN(value) || value === Infinity || value === -Infinity)) {\n            return onerrorvalue.calc();\n        }\n        return value;\n    } catch (e) {\n        return onerrorvalue.calc();\n    }\n}\n\nfunction _if(condition, _then, _else) {\n    if (condition.calc()) {\n        // console.log(condition.formula.name)\n        // if (condition.formula.name === 'P40') {\n        //     console.log('P40 =', _then.calc());\n        //     console.log(' -->', _then.args[1].calc());\n        // }\n        return _then.calc();\n    }\n    else {\n        if (typeof _else === 'undefined') {\n            return false;\n        } else {\n            return _else.calc();\n        }\n    }\n}\n\nfunction and() {\n    for (var i = 0; i < arguments.length; i++) {\n        if (!arguments[i].calc()) return false;\n    }\n    return true;\n}\n\nfunction _or() {\n    for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i].calc()) return true;\n    }\n    return false;\n}\n\nfunction transpose(expressionWithRange) {\n    let range = expressionWithRange.args[0];\n    // console.log(expressionWithRange.args[0])\n    // console.log(expressionWithRange.formula.wb.Sheets.Sheet1)\n    // console.log(range.calc())\n    let matrix = range.calc();\n    let cellName = expressionWithRange.formula.name;\n    let colRow = cellName.match(/([A-Z]+)([0-9]+)/);\n    let sheet = expressionWithRange.formula.sheet;\n    // console.log(colRow[1], colRow[2]);\n    // console.log(col_str_2_int(colRow[1]));\n    let colNumber = col_str_2_int(colRow[1]);\n    let rowNumber = +colRow[2];\n    for (let i = 0; i < matrix.length; i++) {\n        let matrixRow = matrix[i];\n        for (let j = 0; j < matrixRow.length; j++) {\n            let destinationColumn = colNumber + i;\n            let destinationRow = rowNumber + j;\n            let value = matrixRow[j];\n            // console.log(int_2_col_str(destinationColumn), destinationRow, value);\n            sheet[int_2_col_str(destinationColumn) + destinationRow].v = value;\n        }\n    }\n    // console.log(expressionWithRange.formula.name)\n    return matrix[0][0];\n}\n\nmodule.exports = {\n    'OFFSET': raw_offset,\n    'IFERROR': iferror,\n    'IF': _if,\n    'AND': and,\n    'OR': _or,\n    'TRANSPOSE': transpose,\n};\n","\"use strict\";\n\nconst RawValue = require('./RawValue.js');\nconst str_2_val = require('./str_2_val.js');\nconst find_all_cells_with_formulas = require('./find_all_cells_with_formulas.js');\n\nclass Calculator {\n    \n    constructor(workbook, exec_formula) {\n        this.workbook = workbook;\n        this.expressions = [];\n        this.exec_formula = exec_formula;\n        this.variables = {};\n        this.formulas = find_all_cells_with_formulas(workbook, exec_formula);\n        for (let i = this.formulas.length - 1; i >= 0; i--) {\n            let exp = exec_formula.build_expression(this.formulas[i]);\n            this.expressions.push(exp);\n        }\n        this.calcNames();\n    }\n    \n    setVar(var_name, value) {\n        let variable = this.variables[var_name];\n        if (variable) {\n            variable.setValue(value);\n        } else {\n            this.expressions.forEach(exp => {\n                this.setVarOfExpression(exp, var_name, value);\n            });\n        }\n    }\n    \n    getVars() {\n        let vars = {};\n        for (let k in this.variables) {\n            vars[k] = this.variables[k].calc();\n        }\n        return vars;\n    }\n    \n    calcNames() {\n        if (!this.workbook || !this.workbook.Workbook || !this.workbook.Workbook.Names) {\n            return;\n        }\n        this.workbook.Workbook.Names.forEach(item => {\n            let val = this.getRef(item.Ref);\n            this.variables[item.Name] = val;\n            this.expressions.forEach(exp => {\n                this.setVarOfExpression(exp, item.Name);\n            });\n        });\n    }\n    \n    getRef(ref_name) {\n        if (!this.formulas.length) {\n            throw new Error(\"No formula found.\");\n        }\n        let first_formula = this.formulas[0];\n        let formula_ref = first_formula.formula_ref;\n        let formula = {\n            formula_ref: formula_ref,\n            wb: this.workbook,\n            exec_formula: this.exec_formula\n        };\n        return str_2_val(ref_name, formula);\n    }\n    \n    setVarOfExpression(exp, var_name, value) {\n        for (let i = 0; i < exp.args.length; i++) {\n            let arg = exp.args[i];\n            if (arg === var_name) {\n                exp.args[i] = this.variables[var_name] || (this.variables[var_name] = new RawValue(value));\n            } else if (typeof arg === 'object' && (arg.name === 'Expression' || arg.name === 'UserFn')) {\n                this.setVarOfExpression(arg, var_name, value);\n            }\n        }\n    }\n    \n    execute() {\n        this.expressions.forEach(exp => {\n            exp.update_cell_value();\n        });\n    }\n}\n\nmodule.exports = Calculator;"],"sourceRoot":""}